@page "/user"
@using System.ComponentModel.DataAnnotations

<MudPaper Class="pa-4 mx-auto">
    <MudForm @ref="form" bind-IsValid="isSuccess" bind-Errors="errors" Model="@user">
        <MudTextField T="string" @bind-Value="@user.FirstName" Label="First Name" Required="true" RequiredError="First Name is required" />
        <MudTextField T="string" @bind-Value="@user.LastName" Label="Last Name" Required="true" Class="mt-3" RequiredError="Last Name is required" />
        <MudTextField T="string" @bind-Value="@user.Email" Label="Email" Required="true" Class="mt-3" RequiredError="Email is required"
                      Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" />
    </MudForm>
    <MudPaper Class="pa-4 mt-4">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddUser">Save User</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" OnClick="@(() => form.ResetAsync())" Class="mx-2">Reset</MudButton>
    </MudPaper>
</MudPaper>

<MudPaper Class="pa-4 mt-6">
    <MudTable Items="@users" ServerData="LoadServerData" Filterable="true" Hover="true" Bordered="true" Striped="true">
        <HeaderContent>
            <MudTh>First Name</MudTh>
            <MudTh>Last Name</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Age</MudTh>
            <MudTh>Gender</MudTh>
            <MudTh>Phone</MudTh>
            <MudTh>Address</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="First Name">@context.FirstName</MudTd>
            <MudTd DataLabel="Last Name">@context.LastName</MudTd>
            <MudTd DataLabel="Email">@context.Email</MudTd>
            <MudTd DataLabel="Age">@context.Age</MudTd>
            <MudTd DataLabel="Gender">@context.Gender</MudTd>
            <MudTd DataLabel="Phone">@context.Phone</MudTd>
            <MudTd DataLabel="Address">@context.Address</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</MudPaper>

@code {
    private bool isSuccess;
    private string[] errors = [];
    private MudForm form;
    private User user = new();
    private List<User> users = new();

    private async Task AddUser()
    {
        await form.Validate();
        if (form.IsValid)
        {
            users.Add(new User
            {
                FirstName = user.FirstName,
                LastName = user.LastName,
                Email = user.Email,
                Age = user.Age,
                Gender = user.Gender,
                Phone = user.Phone,
                Address = user.Address
            });
            user = new User();
            await form.ResetAsync();
            StateHasChanged();
        }
    }

    private Task<TableData<User>> LoadServerData(TableState state, CancellationToken cancellationToken)
    {
        var data = users.Skip(state.Page * state.PageSize).Take(state.PageSize).ToList();
        return Task.FromResult(new TableData<User> { TotalItems = users.Count, Items = data });
    }

    public class User
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public int Age { get; set; }
        public string Gender { get; set; }
        public string Phone { get; set; }
        public string Address { get; set; }
    }
}